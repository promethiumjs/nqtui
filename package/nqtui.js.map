{"mappings":";;;;;gBCGc,KAAK,CAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,CAAC;QAAA,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,CAAC;QAAA,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC;QAAA,CAAC;IAC1B,CAAC;WAEM,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC;QAC/B,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK;IAC5B,CAAC;WAEM,wBAAwB,CAAC,SAAS,EAAE,MAAM,EAAE,CAAC;QAClD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,IAAI,MAAM;IAC9C,CAAC;IAED,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,GAAG,CAAC,SAAS,CAAC,KAAK;QAE7C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ;IAC/B,CAAC;IAED,qBAAqB,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,GAAG,CAAC,SAAS,CAAC,KAAK;QAC7C,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK;QAEpD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ;IAC/B,CAAC;IAED,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK;QAC5C,EAAE,EAAE,MAAM,CAAC,QAAQ,KAAK,CAAU,WAAE,QAAQ;IAC9C,CAAC;IAED,aAAa,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;QAC7C,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK;QAE/B,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,CAAC;QAC/B,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK;QAEtC,MAAM,CAAC,KAAK;IACd,CAAC;IAED,0BAA0B,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;QAC1D,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK;QAE/B,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,CAAC;QAC/B,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK;QACtC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;QAEzC,MAAM,CAAC,KAAK;IACd,CAAC;IAED,KAAK,GAAG,CAAC;QACP,EAA8B,AAA9B,4BAA8B;QAC9B,EAA+C,AAA/C,6CAA+C;QAC/C,EAAsC,AAAtC,oCAAsC;QAEtC,EAAc,AAAd,YAAc;QACd,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI;IAC3B,CAAC;IAED,MAAM,CAAC,SAAS,EAAE,aAAa,EAAE,CAAC;QAChC,EAAE,EAAE,aAAa,EAAE,aAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE,aAAa;aAC9D,aAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,SAAS;IACxC,CAAC;IAED,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC;IAAA,CAAC;IAE/B,qBAAqB,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC;IAAA,CAAC;IAEvC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC;IAAA,CAAC;IAE7B,WAAW,GAAG,CAAC;IAAA,CAAC;IAEhB,eAAe,GAAG,CAAC;IAAA,CAAC;IAEpB,SAAS,GAAG,CAAC;IAAA,CAAC","sources":["src/nqtui.js","src/Component.js"],"sourcesContent":["import Component from \"./Component.js\";\nimport { html } from \"lit-html\";\nimport { classMap } from \"lit-html/directives/class-map.js\";\n\nexport { Component, html, classMap };\n","import { render } from \"lit-html\";\n\nexport default class Component {\n  constructor(props) {\n    this.state = {};\n    this.children = {};\n    this.props = props || {};\n  }\n\n  static create(ClassName, props) {\n    return new ClassName(props);\n  }\n\n  static createInstanceFromObject(ClassName, object) {\n    return Object.assign(new ClassName(), object);\n  }\n\n  addChild(ClassName, nodeName, props) {\n    this.children[nodeName] = new ClassName(props);\n\n    return this.children[nodeName];\n  }\n\n  addChildWithTiedState(ClassName, nodeName, props) {\n    this.children[nodeName] = new ClassName(props);\n    this.state[nodeName] = this.children[nodeName].state;\n\n    return this.children[nodeName];\n  }\n\n  addState(state, callback) {\n    this.state = Object.assign(this.state, state);\n    if (typeof callback === \"function\") callback();\n  }\n\n  addToChildren(ClassName, nodeListName, props) {\n    let child = new ClassName(props);\n\n    if (!this.children[nodeListName]) {\n      this.children[nodeListName] = [];\n      this.state[nodeListName] = [];\n    }\n\n    this.children[nodeListName].push(child);\n\n    return child;\n  }\n\n  addToChildrenWithTiedState(ClassName, nodeListName, props) {\n    let child = new ClassName(props);\n\n    if (!this.children[nodeListName]) {\n      this.children[nodeListName] = [];\n      this.state[nodeListName] = [];\n    }\n\n    this.children[nodeListName].push(child);\n    this.state[nodeListName].push(child.state);\n\n    return child;\n  }\n\n  clone() {\n    //let clone = new Component();\n    //let decoy = JSON.parse(JSON.stringify(this));\n    //clone = Object.assign(clone, decoy);\n\n    //return clone\n    return Object.create(this);\n  }\n\n  render(container, renderOptions) {\n    if (renderOptions) render(this.template(), container, renderOptions);\n    else render(this.template(), container);\n  }\n\n  dispatchEvent(event, target) {}\n\n  handleDispatchedEvent(event, source) {}\n\n  handleEvent(event, source) {}\n\n  updateState() {}\n\n  addEventHandler() {}\n\n  linkEvent() {}\n}\n"],"names":[],"version":3,"file":"nqtui.js.map"}