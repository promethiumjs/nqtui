{"mappings":"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","sources":["src/nqtui.js","src/Component.js","src/$.js"],"sourcesContent":["import Component from \"./Component.js\";\nimport { $ } from \"./$.js\";\nimport { html } from \"lit-html\";\nimport { classMap } from \"lit-html/directives/class-map.js\";\nimport { styleMap } from \"lit-html/directives/style-map.js\";\nimport { guard } from \"lit-html/directives/guard.js\";\nimport { cache } from \"lit-html/directives/cache.js\";\nimport { repeat } from \"lit-html/directives/repeat.js\";\nimport { live } from \"lit-html/directives/live.js\";\nimport { ifDefined } from \"lit-html/directives/if-defined.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { until } from \"lit-html/directives/until.js\";\n\nexport {\n  Component,\n  $,\n  html as h,\n  classMap,\n  styleMap,\n  guard,\n  cache,\n  repeat,\n  live,\n  ifDefined,\n  ref,\n  until,\n};\n","import { render } from \"lit-html\";\nimport { setUpdateFunction } from \"./$\";\n//@ts-check\n\n/**\n * The Component Class.\n * @typedef Component\n * @type {object}\n * @property {object} state - An object that represents that state of your component.\n * @property {object} events - An object that represents that represents the events your component\n * is listening for.\n * @property {object} children - An object that represents that children of your component(these are usually other\n * components).\n * @property {object} props - An object that represents properties that have been passed down to your component\n * from it's parent.\n */\n\n/**\n * The Component Class.\n */\nexport default class Component {\n  constructor(props) {\n    this.events = {};\n    this.props = props || {};\n  }\n\n  static createFromObject(object) {\n    class NewClassComponent extends Component {\n      constructor(props) {\n        super(props);\n\n        let objectKeys = Object.keys(object);\n\n        objectKeys.forEach((objectKey) => {\n          this[objectKey] = object[objectKey];\n        });\n      }\n    }\n\n    return NewClassComponent;\n  }\n\n  static createClassComponentRoot(component) {\n    if (\n      typeof component.props.renderContainer === \"string\" ||\n      component.props.renderContainer instanceof String\n    )\n      component.props.renderContainer = document.querySelector(\n        component.props.renderContainer\n      );\n\n    let updateFunction = component.render.bind(\n      component,\n      component.props.renderContainer,\n      component.props.renderOptions\n    );\n\n    component.addEvent(\"renderRoot\", updateFunction);\n\n    setUpdateFunction(updateFunction);\n\n    updateFunction();\n\n    return component;\n  }\n\n  static createFunctionalComponentRoot(component, props) {\n    if (\n      typeof props.renderContainer === \"string\" ||\n      props.renderContainer instanceof String\n    )\n      props.renderContainer = document.querySelector(props.renderContainer);\n\n    let updateFunction = render.bind(\n      component,\n      component(props),\n      props.renderContainer,\n      props.renderOptions\n    );\n\n    setUpdateFunction(updateFunction);\n\n    updateFunction();\n\n    return component;\n  }\n\n  /**\n   * Create a new root component from an existing object using the expression \"Component.createInstanceFromObject()\".\n   * @param {class} ComponentType - The class that you want your component to extend(The provided\n   * class should be one that extends the Component class). This argument is required.\n   * @param {object} props - An object of properties that will be set as your component's props object.\n   * This argument is also required, with a property of renderContainer. The value of the renderContainer\n   * property should be the DOM element under which the component will be rendered(it's parent).\n   * @return {Component} The newly created component.\n   */\n  static createRootFromObject(object, props) {\n    let component = Object.assign(new Component(props), object);\n\n    return Component.createClassComponentRoot(component);\n  }\n\n  /**\n   * Create a new root component using the expression \"Component.createRoot()\".\n   * @param {class} ComponentType - The class that you want your component to extend(The provided\n   * class should be one that extends the Component class). This argument is required.\n   * @param {object} props - An object of properties that will be set as your component's props object.\n   * This argument is also required, with a property of renderContainer. The value of the renderContainer\n   * property should be the DOM element under which the component will be rendered(it's parent).\n   * @return {Component} The newly created component.\n   */\n  static createRoot(ComponentType, props) {\n    if (ComponentType.prototype && ComponentType.prototype.isClassComponent) {\n      let component = new ComponentType(props);\n\n      return Component.createClassComponentRoot(component);\n    } else {\n      let component = ComponentType;\n\n      return Component.createFunctionalComponentRoot(component, props);\n    }\n  }\n\n  addProps(props) {\n    Object.assign(this.props, props);\n\n    return this;\n  }\n\n  /**\n   * Update the state of your component.\n   * @param {Object} state - An object that represents the state to be added to your component. New properties will\n   * be added to your component's state object and existing properties will be used to update the corresponding values\n   * on your component's state object.\n   * @param {string} events - Events to be emmitted on your component.\n   * @param {object} [eventObject] - Arguments to be passed to the event callback.\n   * @return {Component} Returns the component whose state was updated.\n   */\n  addState(state, events, eventObject) {\n    Object.assign(this.state, state);\n\n    this.update(events, eventObject);\n\n    return this;\n  }\n\n  /**\n   * This represents an event callback\n   * @callback Component~eventCallback\n   * @param {object} eventObject - An object containing properties to be used by event callback.\n   */\n\n  /**\n   * Subcribe to an event on your component.\n   * @param {string} eventName - A string representing the event type to be subscribed to. Event type will be create if it doesn't\n   * already exist.\n   * @param {Component~eventCallback} callback - Callback function to be called when the event is emitted.\n   */\n  addEvent(eventName, callback) {\n    if (this.events[eventName]) {\n      this.events[eventName].push(callback);\n    } else {\n      this.events[eventName] = [];\n      this.events[eventName].push(callback);\n    }\n\n    return {\n      remove: () =>\n        this.events[eventName] &&\n        this.events[eventName].splice(\n          this.events[eventName].indexOf(callback) >>> 0,\n          1\n        ),\n    };\n  }\n\n  /**\n   * Emit an event on your component.\n   * @param {string} eventName - A string representing the event type to be emitted.\n   * @param {object} eventObject - An object containing properties to be used by event callbacks.\n   * @return {Component}  Your component.\n   */\n  emitEvent(eventName, eventObject) {\n    if (this.events[eventName])\n      this.events[eventName].forEach((fn) => fn(eventObject));\n\n    return this;\n  }\n\n  render(container, renderOptions) {\n    if (renderOptions) {\n      render(this.construct(), container, renderOptions);\n    } else {\n      render(this.construct(), container);\n    }\n\n    return this;\n  }\n\n  update(events, eventObject) {\n    if (events) events.forEach((event) => this.emitEvent(event, eventObject));\n  }\n}\n\nComponent.prototype.isClassComponent = true;\n","import { AsyncDirective, directive } from \"lit-html/async-directive.js\";\r\n\r\nclass $$ extends AsyncDirective {\r\n  constructor(part) {\r\n    super(part);\r\n\r\n    this.initialization = true;\r\n  }\r\n\r\n  initializeComponent(Component, props) {\r\n    if (Component.prototype && Component.prototype.isClassComponent) {\r\n      this.Component = new Component(props);\r\n      this.Component.addEvent(\"renderRoot\", updateFunction);\r\n    }\r\n\r\n    if (this.Component && this.Component.initialized) {\r\n      this.Component.initialized();\r\n    }\r\n\r\n    this.initialization = false;\r\n\r\n    this.createHookId();\r\n  }\r\n\r\n  createHookId() {\r\n    const hookId = `${Math.random()}${Math.random()}`;\r\n    this.hookId = hookId;\r\n  }\r\n\r\n  reconnected() {\r\n    this.Component.reconnected();\r\n  }\r\n\r\n  disconnected() {\r\n    this.Component.disconnected();\r\n  }\r\n\r\n  update(part, [Component, props]) {\r\n    if (this.initialization) {\r\n      this.initializeComponent(Component, props);\r\n    }\r\n\r\n    return this.render(Component, props);\r\n  }\r\n\r\n  render(Component, props) {\r\n    if (this.Component) this.Component.addProps(props);\r\n    return this.Component ? this.Component.construct(props) : Component(props);\r\n  }\r\n}\r\n\r\nconst $ = directive($$);\r\n\r\nlet updateFunction = null;\r\n\r\nfunction setUpdateFunction(newUpdateFunction) {\r\n  updateFunction = newUpdateFunction;\r\n}\r\n\r\nfunction callUpdateFunction() {\r\n  updateFunction();\r\n}\r\n\r\nexport { $, setUpdateFunction, callUpdateFunction };\r\n"],"names":[],"version":3,"file":"nqtui.js.map","sourceRoot":"/"}